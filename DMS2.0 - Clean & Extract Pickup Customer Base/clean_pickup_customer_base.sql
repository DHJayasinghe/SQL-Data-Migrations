--DROP TABLE #tmpSTEP6;
--DROP TABLE #tempPickupAddress;

SELECT P.CUSTOMER_ID,
	REPLACE(CASE CHARINDEX(',',CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END) WHEN 0 THEN CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END ELSE
	REPLACE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END,
	REVERSE(SUBSTRING(REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END),1,CHARINDEX(',',REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END)))),
	STUFF(REVERSE(SUBSTRING(REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END),1,CHARINDEX(',',REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END)))),
		CASE PATINDEX('%0[0-9]%',REVERSE(SUBSTRING(REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END),1,CHARINDEX(',',REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END))))) WHEN 0 THEN 1 
		ELSE PATINDEX('%0[0-9]%',REVERSE(SUBSTRING(REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END),1,CHARINDEX(',',REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END))))) END,
		IIF(PATINDEX('%0[0-9]%',REVERSE(SUBSTRING(REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END),1,CHARINDEX(',',REVERSE(CASE WHEN P.PICKUP_ADDRESS IS NULL THEN C.[ADDRESS] ELSE P.PICKUP_ADDRESS END)))))=0,0,1),'')) END, char(9), '') [ADDRESS], --Rename Colombo 03 like Town names to Colombo 3 
	REPLACE(STUFF(CASE WHEN P.PICKUP_TOWN IS NULL THEN C.TOWN ELSE P.PICKUP_TOWN END,
		CASE PATINDEX('%0[0-9]%',CASE WHEN P.PICKUP_TOWN IS NULL THEN C.TOWN ELSE P.PICKUP_TOWN END) WHEN 0 THEN 1 ELSE PATINDEX('%0[0-9]%',CASE WHEN P.PICKUP_TOWN IS NULL THEN C.TOWN ELSE P.PICKUP_TOWN END) END,
		IIF(PATINDEX('%0[0-9]%',CASE WHEN P.PICKUP_TOWN IS NULL THEN C.TOWN ELSE P.PICKUP_TOWN END)=0,0,1),''), char(9), '') [TOWN] --Rename Colombo 03 like Town names to Colombo 3 
INTO #tempPickupAddress
FROM dbo.PICKUP P LEFT JOIN [dbo].[CUSTOMER] C
ON P.CUSTOMER_ID=C.CUSTOMER_ID
--SELECT * FROM  #tempPickupAddress ORDER BY CUSTOMER_ID
;WITH STEP1(CUSTOMER_ID,CLN_ADDRESS,TOWN,ORIG_ADDRESS)
AS(
SELECT
	[CUSTOMER_ID],
	REPLACE(TRIM(
		REPLACE(
		REPLACE([ADDRESS],REPLACE([TOWN],',',''),''),REPLACE(REPLACE([TOWN],',',''),' ',''),'')) --Step1 - remove town name from address field 
	,',,',',') CLN_ADDRESS, --Step1 - replace double commas with single
	REPLACE([TOWN],',','') [TOWN],
	[ADDRESS] ORIG_ADDRESS
FROM #tempPickupAddress
),
STEP3 AS
(SELECT 
	CUSTOMER_ID,
	REPLACE(RTRIM(REVERSE( --Step3 - extra step to remove trailing comma(if exist) from the address field
        STUFF(REVERSE(
				TRIM(REVERSE( --Step2 - remove trailing comma from the address field
					STUFF(REVERSE(CLN_ADDRESS),1,IIF(SUBSTRING(REVERSE(CLN_ADDRESS),1,1)=',',1,0),'')
				))
			),1,
			IIF(SUBSTRING(REVERSE(
				TRIM(REVERSE( --Step2 - remove trailing comma from the address field
					STUFF(REVERSE(CLN_ADDRESS),1,IIF(SUBSTRING(REVERSE(CLN_ADDRESS),1,1)=',',1,0),'')
				))
		),1,1) = ',',1,0),'')
    )),'.','') CLN_ADDRESS, -- remove dots
	[TOWN],
	ORIG_ADDRESS
FROM STEP1)
SELECT * INTO #tmpSTEP3 FROM STEP3
DROP TABLE #tempPickupAddress; -- DROP Temp Pickup Address fields

;WITH STEP4 AS
(SELECT 
	CUSTOMER_ID,
	CLN_ADDRESS,
	REVERSE( --Step4 - seperate comma seperated last set of words as street
		SUBSTRING(REVERSE(CLN_ADDRESS),1,CHARINDEX(',',REVERSE(CLN_ADDRESS)))
	) STREET,
	[TOWN],
	ORIG_ADDRESS
FROM #tmpSTEP3),
STEP5 AS
(SELECT 
	CUSTOMER_ID,
	REPLACE(TRIM(REPLACE(REPLACE(REVERSE( --Step5 - remove trailing comma (if exist) and line breaks and tab spaces after seperating street from address field
        STUFF(
			REVERSE(TRIM(REPLACE(CLN_ADDRESS,STREET,''))),1,
			IIF(SUBSTRING(REVERSE(TRIM(REPLACE(CLN_ADDRESS,STREET,''))), 1, 1) = ',',1,0),'')
    ),CHAR(13), ''),CHAR(10), '')), char(9), '') CLN_ADDRESS,
	REPLACE(TRIM(REPLACE(REPLACE( --Step5 - remove leading comma and line breaks (CR, LF CR+LF) and tab spaces after from the street field
        STUFF(STREET,1,IIF(SUBSTRING(STREET, 1, 1) = ',',1,0),'')
    , CHAR(13), ''), CHAR(10), '')), char(9), '') STREET,
	[TOWN],
	ORIG_ADDRESS
FROM STEP4),
STEP6 AS
(SELECT 
	CUSTOMER_ID,
	CLN_ADDRESS,
	TRIM(SUBSTRING(CLN_ADDRESS,1,CHARINDEX(' ', CLN_ADDRESS))) PREFIX1, -- seperate remain address field by spaces
	TRIM(SUBSTRING(CLN_ADDRESS,CHARINDEX(' ', CLN_ADDRESS),LEN(CLN_ADDRESS)+1)) PREFIX2,
	STREET,
	IIF(LEN(ISNULL(STREET,''))>0,'Y','N') HasStreet, -- whether has street address from STEP4
	TOWN,
	ORIG_ADDRESS
FROM STEP5)
SELECT * INTO #tmpSTEP6 FROM STEP6
DROP TABLE  #tmpSTEP3 -- DROP Temp STEP3 table

--SELECT * FROM #tmpSTEP6 ORDER BY CUSTOMER_ID
--WHERE CUSTOMER_ID=17772
;WITH STEP7
AS
(SELECT
	CUSTOMER_ID,
	CLN_ADDRESS,
	PREFIX1 PREFIX1,
	TRIM(SUBSTRING(PREFIX2,1,CHARINDEX(' ', PREFIX2))) PREFIX2,
	TRIM(SUBSTRING(TRIM(SUBSTRING(PREFIX2,CHARINDEX(' ', PREFIX2),LEN(PREFIX2)+1)),1,CHARINDEX(' ', TRIM(SUBSTRING(PREFIX2,CHARINDEX(' ', PREFIX2),LEN(PREFIX2)+1))))) PREFIX3,
	TRIM(SUBSTRING(TRIM(SUBSTRING(PREFIX2,CHARINDEX(' ', PREFIX2),LEN(PREFIX2)+1)),CHARINDEX(' ', TRIM(SUBSTRING(PREFIX2,CHARINDEX(' ', PREFIX2),LEN(PREFIX2)+1))),LEN(TRIM(SUBSTRING(PREFIX2,CHARINDEX(' ', PREFIX2),LEN(PREFIX2)+1)))+1)) PREFIX4,
	STREET,
	HasStreet,
	TOWN,
	ORIG_ADDRESS
FROM #tmpSTEP6)
SELECT 
	STEP7.CUSTOMER_ID AS CustomerId,
	CU.CUSTOMER_NAME,
	CLN_ADDRESS,
	PREFIX1,
	PREFIX2,
	PREFIX3,
	PREFIX4,
	CASE WHEN HasStreet='Y' THEN CASE WHEN LEN(CONCAT(PREFIX4,' ',STREET)) <=30 THEN CONCAT(PREFIX1,' ',PREFIX2,' ',PREFIX3) ELSE CLN_ADDRESS END 
	ELSE
		CASE WHEN (LEN(PREFIX2)=0 AND LEN(PREFIX3)=0 AND LEN(PREFIX4)=0) OR --if rest of the prefixes are NULL pass PREFIX1 as Street => street field is mandotory
			(PATINDEX('%[0-9]%',PREFIX1)=0 AND PATINDEX('%[0-9]%',PREFIX2)=0) THEN NULL  -- OR if Prefix1 and Prefix2 not contains any Building number => not a building
		WHEN (PATINDEX('%[0-9]%',PREFIX1)=0 AND PATINDEX('%[0-9]%',PREFIX2)!=0) OR -- if prefix1 does not contain any numbers but prefix2 contains => ex: NO 33
			(PATINDEX('%[0-9]%',PREFIX1)!=0 AND PATINDEX('%[0-9]%',PREFIX2)!=0) OR -- if prefix1 contain and prefix2 contains  any numbers => ex: 41 2/1, GREGORY S RD
				(PATINDEX('%[0-9]%',PREFIX1)!=0 AND (LEN(PREFIX2)<=1 OR PREFIX2 IN ('FLOOR','TOWER','LANE'))) AND LEN(PREFIX3)>1 THEN CONCAT(PREFIX1,' ',PREFIX2) --if prefix1 contains numbers and prefix2 contains only single char and prefix3 is not a single char => ex: 330 T B JAYAH MW => 330, T B JAYAH MW
		ELSE PREFIX1 END  
	END Building,
	TRIM(CASE WHEN HasStreet='Y' THEN CASE WHEN LEN(CONCAT(PREFIX4,' ',STREET)) <=30 THEN CONCAT(PREFIX4,' ',STREET) ELSE STREET END   
	ELSE 
		CASE 
			WHEN (LEN(PREFIX2)=0 AND LEN(PREFIX3)=0 AND LEN(PREFIX4)=0) THEN PREFIX1 --if rest of the prefixes are NULL pass PREFIX1 as Street => street field is mandotory
			WHEN (PATINDEX('%[0-9]%',PREFIX1)=0 AND PATINDEX('%[0-9]%',PREFIX2)=0) THEN TRIM(TRIM(CONCAT(PREFIX1,' ',PREFIX2))+' '+TRIM(CONCAT(PREFIX3,' ',PREFIX4)))  -- OR if Prefix1 and Prefix2 not contains any Building number => not a building
			WHEN (PATINDEX('%[0-9]%',PREFIX1)=0 AND PATINDEX('%[0-9]%',PREFIX2)!=0) OR -- if prefix1 does not contain any numbers but prefix2 contains => ex: NO 33
				(PATINDEX('%[0-9]%',PREFIX1)!=0 AND PATINDEX('%[0-9]%',PREFIX2)!=0) OR -- if prefix1 contain and prefix2 contains  any numbers => ex: 41 2/1, GREGORY S RD
				(PATINDEX('%[0-9]%',PREFIX1)!=0 AND LEN(PREFIX2)<=1) AND LEN(PREFIX3)>1 THEN CONCAT(PREFIX3,' ',PREFIX4) --if prefix1 contains numbers and prefix2 contains only single char and prefix3 is not a single char => ex: 330 T B JAYAH MW => 330, T B JAYAH MW
			ELSE TRIM(TRIM(CONCAT(PREFIX2,' ',PREFIX3))+' '+PREFIX4)  
		END 
	END) Street,
	STEP7.TOWN AS City,
	HasStreet,
	ORIG_ADDRESS
INTO #tmpSTEP7
FROM STEP7 INNER JOIN dbo.CUSTOMER CU
ON STEP7.CUSTOMER_ID=CU.CUSTOMER_ID
DROP TABLE  #tmpSTEP6 -- DROP Temp STEP6 table

SELECT  
	CustomerId,
	CUSTOMER_NAME,
	CLN_ADDRESS,
	PREFIX1,
	PREFIX2,
	PREFIX3,
	PREFIX4,
	Building,
	--LEN(Building) BuildingLen,
	REPLACE(Street,'  ','') Street,
	--LEN(REPLACE(Street,'  ','')) StreetLen,
	TRIM(City) City,
	--LEN(TRIM(City)) CityLen,
	HasStreet,
	ORIG_ADDRESS
FROM #tmpSTEP7
WHERE LEN(Building)>35 OR LEN(Street)>30 OR LEN(City)>30

--DROP TABLE #tmpSTEP7
--REPLACE('42, NORRIS CANAL COL-10')
-- 17772
-- 17767
--SELECT RTRIM(SUBSTRING('69/1 ELVITIGALA MW',1,CHARINDEX(' ', '69/1 ELVITIGALA MW')));  
--SELECT PATINDEX('%[0-9]%','69/1')

--12530
--12157
--''